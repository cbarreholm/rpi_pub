---
# tasks file for firewall baseline

- name: Install ufw firewall package  (if not present)
  become: true
  apt: 
    install_recommends: yes
    name: "ufw"
    state: present
  tags: firewall

- name: Default deny incoming
  become: true
  ufw:
    default: deny
    direction: incoming
  tags: firewall

- name: Default deny outgoing
  become: true
  ufw:
    default: deny
    direction: outgoing
  tags: firewall

# Important to avoid locking us out
- name: Firewall limit ssh
  become: true
  ufw:
    rule: limit 
    to_port: ssh
    proto: tcp
  tags: firewall

- name: Allow HTTP
  become: true
  ufw:
    rule: allow 
    to_port: "{{ firewall_inbound_http_port }}"
    proto: tcp
  when: firewall_inbound_http_port | length > 0
  tags: firewall

- name: Allow HTTPS
  become: true
  ufw:
    rule: allow 
    to_port: "{{ firewall_inbound_https_port }}"
    proto: tcp
  when: firewall_inbound_https_port | length > 0
  tags: firewall

- name: Allow MQTT
  become: true
  ufw:
    rule: allow 
    to_port: "{{ firewall_inbound_mqtt_port }}"
    proto: tcp
  when: firewall_inbound_mqtt_port | length > 0
  tags: firewall,firewall.mqtt

- name: Allow DNS connections to DNS server
  become: true
  ufw:
    rule: allow
    direction: out
    to_ip: "{{ item }}" 
    to_port: "53"
    proto: udp
  loop: "{{ firewall_outbound_dns_ips }}"  
  tags: firewall

- name: Allow apt updates to connect to specific IPs
  become: true
  ufw:
    rule: allow
    direction: out
    to_ip: "{{ item }}" 
    to_port: http
    proto: tcp
  loop: "{{ config_firewall_apt_update_ips }}"    
  tags: firewall

- name: Allow ntp to connect to specific IPs
  # Important since the pi is missing a RTC and easily looses track of time
  become: true
  ufw:
    rule: allow
    direction: out
    to_ip: "{{ item }}" 
    to_port: ntp
    proto: udp
  loop: "{{ config_firewall_ntp_ips }}"    
  tags: firewall


- name: Allow certbot/letsencrypt connect to specific IPs
  become: true
  ufw:
    rule: allow
    direction: out
    to_ip: "{{ item }}" 
    to_port: https
    proto: tcp
  loop: "{{ config_firewall_letsencrypt_ips }}"    
  tags: firewall

- name: Allow outbound to upstream service
  become: true
  ufw:
    rule: allow
    direction: out
    to_ip: "{{firewall_outbound_upstream_ip}}"
    to_port: "{{firewall_outbound_upstream_port}}"
    proto: tcp
  when: firewall_outbound_upstream_ip | length > 0 and firewall_outbound_upstream_ip != "127.0.0.1"
  tags: firewall,firewall.outbound

- name: Enable firewall
  become: true
  ufw:
    state: enabled
  tags: firewall

